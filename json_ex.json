{
	// *** Need to ask the user
	"nidm_Data/nidm_hasMRIProtocol": "nlx_FunctionalMRIprotocol",
	// not needed since we can deduce from protocol:
	//"nlx_Imaginginstrument/prov:type" : "nlx_Magneticresonanceimagingscanner'",
	// Groups is optional > no "Groups" means single-subject analysis
	"Groups" :
	{
		"Control": 23,
		"Patient": 21
	},

	// *** Usually Retreived automatically
	"nidm_Data/nidm_grandMeanScaling": true,
	// If nidm_grandMeanScaling is false then target intensity should not be specified
	"nidm_Data/nidm_targetIntensity": "10000",

	// Need to rething the design matrix, would it be easier to path a json matrix and then create 
	// the csv in the exporter
	// So either nidm_DesignMatrix/prov:value or nidm_DesignMatrix/prov:atLocation
	"nidm_DesignMatrix/prov:atLocation": "./DesignMatrix.csv",
	"nidm_DesignMatrix/prov:value": [ [50,10,5,50],
                [51,9,6.5,58.5],
                [52,8,7,56],
                [53,7,8.5,59.5]
               ],

	// Only for first-level models
	"nidm_DesignMatrix/nidm_hasHRFBasis": ["fsl_FSLsGammaHRF"],
	"nidm_DesignMatrix/nidm_hasDriftModel/prov:type": "fsl_GaussianRunningLineDriftModel",


	"nidm_ErrorModel/nidm_hasErrorDistribution": "obo_normaldistribution",
	"nidm_ErrorModel/nidm_errorVarianceHomogeneous": true,
	"nidm_ErrorModel/nidm_varianceMapWiseDependence" : "nidm_IndependentParameter",
	"nidm_ErrorModel/nidm_hasErrorDependence": "obo_Toeplitzcovariancestructure",
	// nidm_ErrorModel/nidm_dependenceMapWiseDependence should not be filled if nidm_hasErrorDependence
	//"nidm_ErrorModel/nidm_dependenceMapWiseDependence" : 'nidm_IndependentParameter',
	"nidm_ModelParameterEstimation/nidm_withEstimationMethod": "obo_generalizedleastsquaresestimation",

	// Name for contrasts
	// ------
	"ParameterEstimateMaps" :
	{
		"tone_counting": "/Users/pe1.nii.gz",
		"tone_counting_probe": "/Users/pe2.nii.gz",
	},
	"nidm_ResidualMeanSquaresMap/prov:atLocation": "/Users/rms.nii.gz",

	// avg all input data?
	"nidm_GrandMeanMap/prov:atLocation": "/Users/grand_mean_map.nii.gz",
	// for SnPM deduce from resm
	"nidm_MaskMap/prov:atLocation": "/Users/mask.nii.gz",

	// optional
	"nidm_ReselsPerVoxelMap/prov:atLocation": "/Users/rpv.nii.gz",

	"Contrasts" : 
	{
		// having the contrast name as the key restrict the characters that can be used so we use a dummy numbering scheme instead
		"tone counting vs baseline": {
			"obo_contrastweightmatrix/prov:value" : [1, 0],
			"nidm_StatisticMap/nidm_statisticType": "obo_tstatistic",
			"nidm_StatisticMap/nidm_errorDegreesOfFreedom": "72.999",
			"nidm_StatisticMap/prov:atLocation": "/Users/tstat1.nii.gz",

			"nidm_ContrastMap/prov:atLocation": "/Users/con1.nii.gz",
			"nidm_ContrastStandardErrorMap/prov:atLocation": "/Users/cstd1.nii.gz",

			// optional
			"nidm_StatisticMap-Z/prov:atLocation": "/Users/zstat1.nii.gz",

			// optional (replace the field name for this contrast)
			"nidm_ContrastMap/nidm_contrastName": "tone counting vs baseline",
		},
		"Contrast_2": {
			"obo_contrastweightmatrix/prov:value" : [1, 0],
			"nidm_ContrastMap/prov:atLocation": "/Users/con1.nii.gz",
			"nidm_ContrastStandardErrorMap/prov:atLocation": "/Users/cstd1.nii.gz",
			"nidm_StatisticMap/nidm_statisticType": "obo_Fstatistic",
			"nidm_StatisticMap/nidm_errorDegreesOfFreedom": "72.999",
			// only for F-stat
			"nidm_StatisticMap/nidm_effectDegreesOfFreedom": "2",
			"nidm_StatisticMap/prov:atLocation": "/Users/fstat1.nii.gz",
			// optional
			"nidm_StatisticMap-Z/prov:atLocation": "/Users/zfstat1.nii.gz",

			// optional (replace the field name for this contrast)
			"nidm_ContrastMap/nidm_contrastName": "tone counting vs baseline",
			},
	},
	"Inferences": 
	{
		"nidm_ClusterDefinitionCriteria/nidm_hasConnectivityCriterion": "nidm_voxel26connected",
		"nidm_PeakDefinitionCriteria/nidm_minDistanceBetweenPeaks": "8.0",
		// optional
		"nidm_PeakDefinitionCriteria/nidm_maxNumberOfPeaksPerCluster": "3",

		// we assume we will only have one thresholding procedure for a given contrast
		"Contrast_1": {
			"nidm_HeightThreshold/prov:type": "PValueUncorrected",
			"nidm_HeightThreshold/prov:value": "0.001",
			"nidm_ExtentThreshold/prov:type": "obo_statistic",
			"nidm_ExtentThreshold/nidm_clusterSizeInVoxels": "0",

			// optional
			"nidm_ExtentThreshold/nidm_clusterSizeInResels": "0",

			// optional
			"nidm_HeightThreshold/nidm_equivalentThreshold": {
				"p<0.0545 unc": {
					"nidm_HeightThreshold/prov:type": "PValueUncorrected",
					"nidm_HeightThreshold/prov:value": "0.001",
				}
				"p<0.0545 unc": {
					"nidm_HeightThreshold/prov:type": "PValueUncorrected",
					"nidm_HeightThreshold/prov:value": "0.001",
				}
			}
			// optional
			"nidm_ExtentThreshold/nidm_equivalentThreshold": {
				"p<0.0545 unc": {
					"nidm_ExtentThreshold/prov:type": "obo_statistic",
					"nidm_ExtentThreshold/prov:value": "0",
				}
				"p<0.0545 unc": {
					"nidm_ExtentThreshold/prov:type": "obo_statistic",
					"nidm_ExtentThreshold/prov:value": "0",
				}
			}


			"nidm_Inference/nidm_hasAlternativeHypothesis": "nidm_OneTailedTest",


			// todo conjunctions

			// optional
			"nidm_DisplayMaskMap/prov:atLocation": "/Users/my_mask.nii.gz",
			// optional
			"nidm:SubVolumeMap/prov:atLocation": "/Users/my_mask.nii.gz",

			// todo searchspacemap
			"nidm_SearchSpaceMaskMap/prov:atLocation": "uri(spm_file(files.searchspace,'cpath'))",
			"nidm_SearchSpaceMaskMap/nidm_searchVolumeInVoxels": 5452552,
			"nidm_SearchSpaceMaskMap/nidm_searchVolumeInUnits": 546545,
			"nidm_SearchSpaceMaskMap/nidm_reselSizeInVoxels": 64565,
			// optional
			"nidm_SearchSpaceMaskMap/nidm_searchVolumeInResels": 64565,
			// SPM only
			"nidm_SearchSpaceMaskMap/spm_searchVolumeReselsGeometry": [45 45 7 5],
			"nidm_SearchSpaceMaskMap/nidm_noiseFWHMInVoxels": [6 6 6],
			"nidm_SearchSpaceMaskMap/nidm_noiseFWHMInUnits": [5.5 5.5 5.5],
			"nidm_SearchSpaceMaskMap/nidm_randomFieldStationarity": true,
			// optional
			"nidm_SearchSpaceMaskMap/nidm_expectedNumberOfVoxelsPerCluster": 65456,
			"nidm_SearchSpaceMaskMap/nidm_expectedNumberOfClusters": 56554,
			"nidm_SearchSpaceMaskMap/nidm_heightCriticalThresholdFWE05": 52.55,
			"nidm_SearchSpaceMaskMap/nidm_heightCriticalThresholdFDR05": 54.25,
			// optional
			"nidm_SearchSpaceMaskMap/spm_smallestSignificantClusterSizeInVoxelsFWE05": 56454.25,
			// optional
			"nidm_SearchSpaceMaskMap/spm_smallestSignificantClusterSizeInVoxelsFDR05": 56457.25,


			"nidm_ExcursionSetMap/prov:atLocation": "/Users/thresh.nii.gz",
// and also nidm_numberOfSupraThresholdClusters clusterlabelmap MIP
			
			// optional
			"nidm_ClusterLabelsMap/prov:atLocation": "/Users/thresh.nii.gz",

			"Clusters": {
				"1": {
					"nidm_SupraThresholdCluster/nidm_clusterSizeInVoxels": "12",
					"nidm_SupraThresholdCluster/nidm_clusterSizeInResels": "1",
					// optional
					"nidm_SupraThresholdCluster/nidm_pValueUncorrected": "9.56276736481136e-52",
					"nidm_SupraThresholdCluster/nidm_pValueFWER": "0.00073267843",
					"nidm_SupraThresholdCluster/nidm_qValueFDR": "0.00018638",
					"Peaks": {
						"1": {
							"nidm_Peak/prov:value": "13.93461",
							"nidm_Coordinate/nidm_coordinateVector": "[ -60, -28, 13 ]",
							// optional
							"nidm_Coordinate/nidm_coordinateVectorInVoxels": "[ -60, -28, 13 ]",
							"nidm_Peak/nidm_pValueUncorrected": "",
							"nidm_Peak/nidm_equivalentZStatistic": "12",
							"nidm_Peak/nidm_pValueFWER": "0.00073267843",
							"nidm_Peak/nidm_qValueFDR": "0.00018638",

						},
					},
				},
			},
		},
		"Contrast_2": {

		},

		// Extension for non-parametric statistics - true for all contrasts ??
		"nidm_NonParametricNullDistribution/nidm_numberOfPermutations": "5000",
		"nidm_NonParametricNullDistribution/nidm_hasResamplingScheme": "nidm_Permutation",
		"nidm_NonParametricNullDistribution/nidm_hasApproximationMethod": "nidm_MonteCarlo",
		"nidm_NonParametricNullDistribution/nidm_maximumNumberOfPermutations": "12345",

		// first-level only
		"nidm_NonParametricNullDistribution/nidm_exchangeabilityBlocks": [1 1 1 2 2 2 3 3 3],
		"nidm_NonParametricNullDistribution/nidm_exchangeabilityWithin": true,

	},
}